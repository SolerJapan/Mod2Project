[{"C:\\Users\\soler\\Desktop\\redux_project2\\src\\index.js":"1","C:\\Users\\soler\\Desktop\\redux_project2\\src\\App.js":"2","C:\\Users\\soler\\Desktop\\redux_project2\\src\\reportWebVitals.js":"3","C:\\Users\\soler\\Desktop\\redux_project2\\src\\Pages\\AboutPage.js":"4","C:\\Users\\soler\\Desktop\\redux_project2\\src\\components\\loginCompon\\index.js":"5","C:\\Users\\soler\\Desktop\\redux_project2\\src\\components\\loginCompon\\RightSide.js":"6","C:\\Users\\soler\\Desktop\\redux_project2\\src\\components\\loginCompon\\Register.js":"7","C:\\Users\\soler\\Desktop\\redux_project2\\src\\components\\loginCompon\\Login.js":"8","C:\\Users\\soler\\Desktop\\redux_project2\\src\\components\\style\\StyledCell.js":"9","C:\\Users\\soler\\Desktop\\redux_project2\\src\\components\\style\\StyledDisplay.js":"10","C:\\Users\\soler\\Desktop\\redux_project2\\src\\components\\style\\StyledStage.js":"11","C:\\Users\\soler\\Desktop\\redux_project2\\src\\components\\style\\StyledTetris.js":"12","C:\\Users\\soler\\Desktop\\redux_project2\\src\\components\\Tetris.js":"13","C:\\Users\\soler\\Desktop\\redux_project2\\src\\components\\StartButton.js":"14","C:\\Users\\soler\\Desktop\\redux_project2\\src\\components\\Display.js":"15","C:\\Users\\soler\\Desktop\\redux_project2\\src\\components\\Stage.js":"16","C:\\Users\\soler\\Desktop\\redux_project2\\src\\components\\Cell.js":"17","C:\\Users\\soler\\Desktop\\redux_project2\\src\\gameHelpers.js":"18","C:\\Users\\soler\\Desktop\\redux_project2\\src\\hooks\\usePlayer.js":"19","C:\\Users\\soler\\Desktop\\redux_project2\\src\\hooks\\useStage.js":"20","C:\\Users\\soler\\Desktop\\redux_project2\\src\\hooks\\useGameStatus.js":"21","C:\\Users\\soler\\Desktop\\redux_project2\\src\\tetrominos.js":"22","C:\\Users\\soler\\Desktop\\redux_project2\\src\\hooks\\useInterval.js":"23","C:\\Users\\soler\\Desktop\\redux_project2\\src\\components\\PauseButton.js":"24","C:\\Users\\soler\\Desktop\\redux_project2\\src\\Pages\\Instructions.js":"25","C:\\Users\\soler\\Desktop\\redux_project2\\src\\components\\loginCompon\\Index.js":"26","C:\\Users\\soler\\Desktop\\redux_project2\\src\\components\\loginCompon\\UserStat.js":"27"},{"size":457,"mtime":1611869206298,"results":"28","hashOfConfig":"29"},{"size":6324,"mtime":1612446116391,"results":"30","hashOfConfig":"29"},{"size":362,"mtime":499162500000,"results":"31","hashOfConfig":"29"},{"size":566,"mtime":1612443531533,"results":"32","hashOfConfig":"29"},{"size":170,"mtime":1611976033794,"results":"33","hashOfConfig":"29"},{"size":424,"mtime":1611976032835,"results":"34","hashOfConfig":"29"},{"size":2517,"mtime":1612307033534,"results":"35","hashOfConfig":"29"},{"size":2138,"mtime":1612307057153,"results":"36","hashOfConfig":"29"},{"size":529,"mtime":1611969039410,"results":"37","hashOfConfig":"29"},{"size":579,"mtime":1612025868218,"results":"38","hashOfConfig":"29"},{"size":472,"mtime":1611958156363,"results":"39","hashOfConfig":"29"},{"size":616,"mtime":1611958986667,"results":"40","hashOfConfig":"29"},{"size":4507,"mtime":1612187393414,"results":"41","hashOfConfig":"29"},{"size":645,"mtime":1612050969928,"results":"42","hashOfConfig":"29"},{"size":283,"mtime":1611975329118,"results":"43","hashOfConfig":"29"},{"size":392,"mtime":1611975830860,"results":"44","hashOfConfig":"29"},{"size":417,"mtime":1612025622038,"results":"45","hashOfConfig":"29"},{"size":1309,"mtime":1612040390408,"results":"46","hashOfConfig":"29"},{"size":1921,"mtime":1612135698669,"results":"47","hashOfConfig":"29"},{"size":1820,"mtime":1611969865852,"results":"48","hashOfConfig":"29"},{"size":934,"mtime":1611969533569,"results":"49","hashOfConfig":"29"},{"size":1335,"mtime":1612108124846,"results":"50","hashOfConfig":"29"},{"size":528,"mtime":1612036538929,"results":"51","hashOfConfig":"29"},{"size":645,"mtime":1612050959365,"results":"52","hashOfConfig":"29"},{"size":544,"mtime":1612135885075,"results":"53","hashOfConfig":"29"},{"size":210,"mtime":1612049487524,"results":"54","hashOfConfig":"29"},{"size":1061,"mtime":1612443372885,"results":"55","hashOfConfig":"29"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},"1s219y8",{"filePath":"59","messages":"60","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"58"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"58"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"58"},"C:\\Users\\soler\\Desktop\\redux_project2\\src\\index.js",[],["116","117"],"C:\\Users\\soler\\Desktop\\redux_project2\\src\\App.js",["118","119","120","121","122","123","124","125","126","127","128"],"import React from 'react';\nimport \"./App.css\";\nimport { Login, Register, UserStat } from \"./components/loginCompon/Index\";\nimport RightSide from \"./components/loginCompon/RightSide\";\nimport Tetris from './components/Tetris';\n\n\nimport { BrowserRouter, Switch, Route, Link } from 'react-router-dom';\nimport AboutPage from \"./Pages/AboutPage\";\nimport Instructions from \"./Pages/Instructions\";\n\n\n\n\n\n\nclass App extends React.Component {\n// constructor to hold state information\n  constructor(props){\n    super(props);\n    this.state = {\n      isLogginActive: true,\n      isLoggedIn : false,\n      isLoginScreen : true,\n      username:'',\n      password: '',\n      HighScore: 0,\n      email: '',\n      // user objects and users saved to state\n      users: [\n        \n        {username:'silversamurai',\n        password: 'giniro',\n        HighScore: 1200,\n        email: 'silversamurai@gmail.com'},\n\n        {username:'fruitspunchsamurai',\n        password: 'fruits',\n        HighScore: 1500,\n        email: 'katsura@gmail.com'}\n      ]\n    };\n    this.submitForm = this.submitForm.bind(this);\n    \n    \n  }\n  // when submit is pressed it takes what was input from the register or login component and is saved to state\n  submitForm = ( username, password , email ) => {\n    \n    this.setState({ username, password, email })\n\n    console.log(\"app submit\")\n   \n    console.log(this.state.users)\n    // if there is no email its treated as login and checks user state else registers user into state and is pushed.\n    if(email == null)\n    {\n      if(this.state.users[0].username == username && this.state.users[0].password == password) \n         \n        {\n          let HighScore = this.state.users[0].HighScore\n          let em = this.state.users[0].email\n          //this.setState({})\n          \n          \n          console.log(\"login success\")\n\n          this.setState({username,password, HighScore, email:em})\n          \n          console.log(this.state)\n\n\n          this.setState(prevState => ({ isLogginActive: !prevState.isLogginActive }));\n          this.setState(prevState => ({ isLoggedIn: !prevState.isLoggedIn }));\n          this.setState(prevState => ({ isLoginScreen: !prevState.isLoginScreen }));\n        }\n        else if(this.state.users[1].username == username && this.state.users[1].password == password )\n        {\n          let HighScore = this.state.users[1].HighScore\n          let em = this.state.users[1].email\n          //this.setState({})\n          \n          \n          console.log(\"login success\")\n\n          this.setState({username,password, HighScore, email:em})\n          \n          console.log(this.state)\n          this.setState(prevState => ({ isLogginActive: !prevState.isLogginActive }));\n          this.setState(prevState => ({ isLoggedIn: !prevState.isLoggedIn }));\n          this.setState(prevState => ({ isLoginScreen: !prevState.isLoginScreen }));\n        }\n      else\n      {\n        console.log(this.state.users[0].username)\n        console.log(this.state.users[1].username)\n        console.log(\"not found\")\n        alert(\"user not found\");\n      }\n      \n    }else \n    {\n     \n      let HighScore = 0;\n      let newUser  = {username, password, email , HighScore};\n\n       this.setState({ users:[...this.state.users, newUser] })\n       \n       \n\n       this.setState(prevState => ({ isLoggedIn: !prevState.isLoggedIn }));\n       this.setState(prevState => ({ isLoginScreen: !prevState.isLoginScreen }));\n\n       setTimeout(() => console.log(this.state), 1000) \n    }\n\n  }\n  \n\n  // function not used but is made to simulate login and change the state which control which is shown \n  changeLoggedin(){\n      this.setState(prevState => ({ isLogginActive: !prevState.isLogginActive }));\n      this.setState(prevState => ({ isLoggedIn: !prevState.isLoggedIn }));\n      this.setState(prevState => ({ isLoginScreen: !prevState.isLoginScreen }));\n  }\n// function is used to simulate logout and change the state which control which is shown \n  changeLoggedOut = () => {\n    this.setState(prevState => ({ isLogginActive: !prevState.isLogginActive }));\n    this.setState(prevState => ({ isLoggedIn: !prevState.isLoggedIn }));\n    this.setState(prevState => ({ isLoginScreen: !prevState.isLoginScreen }));\n}\n  \n   // this function is called when the rightside blue piece is clicked\n   changeState() {\n\n     this.setState(prevState => ({ isLogginActive: !prevState.isLogginActive }));\n   \n   }\n\n  render(){\n    const { isLogginActive,isLoggedIn,isLoginScreen,username,email,password, HighScore,values } = this.state;\n    const current = isLogginActive ? \"Register\" : \"Login\";\n    const currentActive = isLogginActive ? \"login\" : \"register\";\n  \n   \n\n     return(\n\n\n     <div className=\"App\">\n         {/*for the board to the right */}\n        <div className=\"nav\">\n          <h3>Welcome to Redux Tetris</h3>\n          \n          <BrowserRouter>            \n            <Link className=\"about\" to = \"AboutPage\">About</Link> <Link to = \"Instructions\">Instructions</Link>           \n              <Switch>          \n                <Route path='/AboutPage' render={(props) => <AboutPage {...props} />} /> \n                <Route path='/Instructions' render={(props) => <Instructions {...props} />} /> \n              </Switch>\n            </BrowserRouter>\n   \n        </div>\n        {/*call the tetris game on the left */}\n        <Tetris></Tetris>\n\n\n         {/*the login/register box */}\n        <div className=\"login\">\n\n\n          <div className=\"container\" >\n           \n          {isLoggedIn == true && isLogginActive == false && isLoginScreen == false && (   \n          \n          <UserStat changeLoggedOut={this.changeLoggedOut} user={{username, password, email, HighScore}} \n          \n          containerRef={ref => (this.current = ref)} />  )}\n\n            {isLogginActive && isLoginScreen == true && (   <Login  onFormSubmit={this.submitForm} containerRef={ref => (this.current = ref)} />  )}\n           \n            {!isLogginActive && isLoginScreen == true && (  <Register  onFormSubmit={this.submitForm} containerRef={ref => (this.current = ref)}  />  )}\n          </div>\n          {isLoggedIn == false && <RightSide current={current} currentActive={currentActive} \n          \n          onClick={this.changeState.bind(this)} /> }\n        </div>\n    </div>\n  );\n \n}}\n\n\n\nexport default App;\n\n\n","C:\\Users\\soler\\Desktop\\redux_project2\\src\\reportWebVitals.js",[],"C:\\Users\\soler\\Desktop\\redux_project2\\src\\Pages\\AboutPage.js",[],"C:\\Users\\soler\\Desktop\\redux_project2\\src\\components\\loginCompon\\index.js",[],["129","130"],"C:\\Users\\soler\\Desktop\\redux_project2\\src\\components\\loginCompon\\RightSide.js",[],"C:\\Users\\soler\\Desktop\\redux_project2\\src\\components\\loginCompon\\Register.js",[],"C:\\Users\\soler\\Desktop\\redux_project2\\src\\components\\loginCompon\\Login.js",[],"C:\\Users\\soler\\Desktop\\redux_project2\\src\\components\\style\\StyledCell.js",[],["131","132"],"C:\\Users\\soler\\Desktop\\redux_project2\\src\\components\\style\\StyledDisplay.js",[],"C:\\Users\\soler\\Desktop\\redux_project2\\src\\components\\style\\StyledStage.js",[],"C:\\Users\\soler\\Desktop\\redux_project2\\src\\components\\style\\StyledTetris.js",[],"C:\\Users\\soler\\Desktop\\redux_project2\\src\\components\\Tetris.js",[],"C:\\Users\\soler\\Desktop\\redux_project2\\src\\components\\StartButton.js",[],"C:\\Users\\soler\\Desktop\\redux_project2\\src\\components\\Display.js",[],"C:\\Users\\soler\\Desktop\\redux_project2\\src\\components\\Stage.js",[],"C:\\Users\\soler\\Desktop\\redux_project2\\src\\components\\Cell.js",[],"C:\\Users\\soler\\Desktop\\redux_project2\\src\\gameHelpers.js",[],"C:\\Users\\soler\\Desktop\\redux_project2\\src\\hooks\\usePlayer.js",[],"C:\\Users\\soler\\Desktop\\redux_project2\\src\\hooks\\useStage.js",[],"C:\\Users\\soler\\Desktop\\redux_project2\\src\\hooks\\useGameStatus.js",["133"],"import { useState, useEffect, useCallback } from 'react';\r\n\r\n// overall calculates the score based on rows cleared.\r\nexport const useGameStatus = rowsCleared => {\r\n  // declarations for score, rows, and level respectively with hooks\r\n  const [score, setScore] = useState(0);\r\n  const [rows, setRows] = useState(0);\r\n  const [level, setLevel] = useState(0);\r\n   \r\n  // respective scores for single, double, triple, and quad\r\n  const linePoints = [40, 100, 300, 1200];\r\n// This is how score is calculated\r\n  const calcScore = useCallback(() => {\r\n    \r\n    if (rowsCleared > 0) {\r\n      // This is how score is calculated\r\n      setScore(prev => prev + linePoints[rowsCleared - 1] * (level + 1));\r\n      setRows(prev => prev + rowsCleared);\r\n    }\r\n  }, [level, linePoints, rowsCleared]);\r\n\r\n  useEffect(() => {\r\n    calcScore();\r\n  }, [calcScore, rowsCleared, score]);\r\n\r\n  return [score, setScore, rows, setRows, level, setLevel];\r\n};","C:\\Users\\soler\\Desktop\\redux_project2\\src\\tetrominos.js",[],"C:\\Users\\soler\\Desktop\\redux_project2\\src\\hooks\\useInterval.js",[],"C:\\Users\\soler\\Desktop\\redux_project2\\src\\components\\PauseButton.js",[],"C:\\Users\\soler\\Desktop\\redux_project2\\src\\Pages\\Instructions.js",[],"C:\\Users\\soler\\Desktop\\redux_project2\\src\\components\\loginCompon\\Index.js",[],"C:\\Users\\soler\\Desktop\\redux_project2\\src\\components\\loginCompon\\UserStat.js",["134"],"import React, { Component } from \"react\";\r\n\r\n//the operation here is that once the login condition has been fulfilled the \r\n//user infomation with high score will be posted here or new username will be posted but score is 0\r\nexport class UserStat extends Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n    }\r\n     // this handles the logout\r\n     \r\n    submitForm = (event) => {\r\n\r\n         console.log(this.props);\r\n         this.props.changeLoggedOut();\r\n      }\r\n\r\n    render(){\r\n\r\n        console.log(this.props);\r\n\r\n     \r\n        return (\r\n        \r\n            <div className=\"base-container\">        \r\n              <div className=\"header\">UserStats</div>\r\n                \r\n                   <p>Username :</p>{this.props.user.username}\r\n                   <p>HighScore :</p>{this.props.user.HighScore}   \r\n                   <p></p>\r\n                   <button onClick={this.submitForm}  className=\"submitbtn\" >LogOut</button>\r\n                    \r\n                </div>\r\n                \r\n        \r\n           \r\n\r\n        )};\r\n}\r\n\r\n",{"ruleId":"135","replacedBy":"136"},{"ruleId":"137","replacedBy":"138"},{"ruleId":"139","severity":1,"message":"140","line":58,"column":39,"nodeType":"141","messageId":"142","endLine":58,"endColumn":41},{"ruleId":"139","severity":1,"message":"140","line":58,"column":83,"nodeType":"141","messageId":"142","endLine":58,"endColumn":85},{"ruleId":"139","severity":1,"message":"140","line":77,"column":46,"nodeType":"141","messageId":"142","endLine":77,"endColumn":48},{"ruleId":"139","severity":1,"message":"140","line":77,"column":90,"nodeType":"141","messageId":"142","endLine":77,"endColumn":92},{"ruleId":"143","severity":1,"message":"144","line":141,"column":88,"nodeType":"145","messageId":"146","endLine":141,"endColumn":94},{"ruleId":"139","severity":1,"message":"140","line":174,"column":23,"nodeType":"141","messageId":"142","endLine":174,"endColumn":25},{"ruleId":"139","severity":1,"message":"140","line":174,"column":49,"nodeType":"141","messageId":"142","endLine":174,"endColumn":51},{"ruleId":"139","severity":1,"message":"140","line":174,"column":75,"nodeType":"141","messageId":"142","endLine":174,"endColumn":77},{"ruleId":"139","severity":1,"message":"140","line":180,"column":46,"nodeType":"141","messageId":"142","endLine":180,"endColumn":48},{"ruleId":"139","severity":1,"message":"140","line":182,"column":47,"nodeType":"141","messageId":"142","endLine":182,"endColumn":49},{"ruleId":"139","severity":1,"message":"140","line":184,"column":23,"nodeType":"141","messageId":"142","endLine":184,"endColumn":25},{"ruleId":"135","replacedBy":"147"},{"ruleId":"137","replacedBy":"148"},{"ruleId":"135","replacedBy":"149"},{"ruleId":"137","replacedBy":"150"},{"ruleId":"151","severity":1,"message":"152","line":11,"column":9,"nodeType":"153","endLine":11,"endColumn":42},{"ruleId":"154","severity":1,"message":"155","line":7,"column":5,"nodeType":"156","messageId":"157","endLine":9,"endColumn":6},"no-native-reassign",["158"],"no-negated-in-lhs",["159"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-unused-vars","'values' is assigned a value but never used.","Identifier","unusedVar",["158"],["159"],["158"],["159"],"react-hooks/exhaustive-deps","The 'linePoints' array makes the dependencies of useCallback Hook (at line 20) change on every render. Move it inside the useCallback callback. Alternatively, wrap the initialization of 'linePoints' in its own useMemo() Hook.","VariableDeclarator","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","no-global-assign","no-unsafe-negation"]